{"version":3,"sources":["components/header/camera.svg","components/modal/close-button.svg","components/header/Header.js","services/Service.js","reducers/Reducer.js","contexts/CardContainerContext.js","components/card/Card.js","components/modal/Modal.js","components/addModal/NewPersonModal.js","components/addModal/RandomPersonModal.js","components/cardContainer/CardContainer.js","components/principalContainer/PrincipalContainer.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","camera","alt","url","getData","a","axios","get","res","data","Error","addPerson","newPerson","image","country","phone","addNewPerson","fullname","avatar","post","addRandomPerson","addRandomP","reducer","state","action","type","addP","CardContainerContext","createContext","Card","useContext","cardIndex","useState","pixels","setPixels","useEffect","slice","reverse","map","person","style","transform","key","id","Modal","title","children","close","onClick","closeButton","NewPersonModal","dataDispatch","setDisplayNewPerson","newFullname","setNewFullname","newAvatar","setNewAvatar","newCountry","setNewCountry","newPhone","setNewPhone","onChange","event","target","value","placeholder","RandomPersonModal","setDisplayRandomPerson","addRandom","CardContainer","useReducer","displayNewPerson","displayRandomPerson","setCardIndex","slider","Math","ceil","length","then","Provider","icon","faUserPlus","marginLeft","disabled","faChevronLeft","marginRight","faChevronRight","PrincipalContainer","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mOCY5BC,EATA,WACZ,OACD,4BAAQC,UAAU,UACjB,yBAAKA,UAAU,aAAaC,IAAKC,IAAQC,IAAI,WAC7C,wBAAIH,UAAU,gBAAd,uB,uDCLGI,EAAM,6DAECC,EAAO,uCAAG,4BAAAC,EAAA,+EAEGC,IAAMC,IAAIJ,GAFb,cAETK,EAFS,yBAGRA,EAAIC,MAHI,sCAKT,IAAIC,MAAJ,sCALS,yDAAH,qDASPC,EAAS,uCAAG,WAAOC,EAAWC,EAAOC,EAASC,GAAlC,iBAAAV,EAAA,sEAEXW,EAAe,CACjBC,SAAUL,EACVM,OAAQL,EACRC,QAASA,EACTC,MAAOA,GANM,SAQCT,IAAMa,KAAKhB,EAAKa,GARjB,cAQXR,EARW,yBASVA,EAAIC,MATM,sCAWX,IAAIC,MAAJ,wCAXW,yDAAH,4DAeTU,EAAe,uCAAG,8BAAAf,EAAA,sEAEjBgB,EAAa,GAFI,SAGLf,IAAMa,KAAKhB,EAAKkB,GAHX,cAGjBb,EAHiB,yBAIhBA,EAAIC,MAJY,sCAMjB,IAAIC,MAAJ,8CANiB,yDAAH,qD,QCxBfY,EAAU,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACX,IANgB,WAOZ,OAAOD,EAAOf,KAClB,IAPkB,aAQd,MAAM,GAAN,mBAAWc,GAAX,CAAkBC,EAAOE,OAC7B,IARyB,oBAS9B,MAAM,GAAN,mBAAWH,GAAX,CAAkBC,EAAOH,aACpB,QACI,OAAOE,ICTJI,EAFcC,wBAAc,MCmC5BC,EAlCF,WAAO,IAAD,EACaC,qBAAWH,GAA/BlB,EADO,EACPA,KAAMsB,EADC,EACDA,UADC,EAEaC,mBAAS,GAFtB,mBAERC,EAFQ,KAEAC,EAFA,KAQf,OAJAC,qBAAU,WACND,GAAW,KAAOH,KACnB,CAACA,IAGA,kBAAC,WAAD,KAEQtB,EAAK2B,MAAM,GAAGC,UAAUC,KAAI,SAAAC,GACxB,OACI,yBAAKxC,UAAU,cAAcyC,MAAO,CAACC,UAAU,cAAD,OAAgBR,EAAhB,SAC1C,4BAAQS,IAAKH,EAAOI,IAChB,yBACI5C,UAAU,aACVC,IAAKuC,EAAOrB,OACZhB,IAAKqC,EAAOtB,WAEhB,oCACI,wBAAIlB,UAAU,oBAAoBwC,EAAOtB,UACzC,uBAAGlB,UAAU,gBAAe,4CAA5B,IAAuDwC,EAAOzB,SAC9D,uBAAGf,UAAU,gBAAe,0CAA5B,IAAqDwC,EAAOxB,e,yBCAjF6B,EAtBD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9B,OACI,kBAAC,WAAD,KACI,yBAAKhD,UAAU,YACf,6BAASA,UAAU,SACf,gCACI,wBAAIA,UAAU,eAAe8C,GAC7B,4BACI9C,UAAU,eACV0B,KAAK,SACLuB,QAASD,GACT,yBAAK/C,IAAKiD,IAAa/C,IAAI,YAGnC,6BAASH,UAAU,iBACd+C,MC6BNI,EA1CQ,WAAO,IAAD,EACqBpB,qBAAWH,GAAjDwB,EADiB,EACjBA,aAAcC,EADG,EACHA,oBADG,EAEapB,mBAAS,IAFtB,mBAElBqB,EAFkB,KAELC,EAFK,OAGStB,qBAHT,mBAGlBuB,EAHkB,KAGPC,EAHO,OAIWxB,mBAAS,IAJpB,mBAIlByB,EAJkB,KAINC,EAJM,OAKO1B,qBALP,mBAKlB2B,EALkB,KAKRC,EALQ,KAYnB5C,EAAY,uCAAG,4BAAAX,EAAA,sEACEM,EAAU0C,EAAaE,EAAWE,EAAYE,GADhD,OACXjC,EADW,OAEjByB,EAAa,CAAC1B,KJnBI,aImBcC,SAChCqB,IAHiB,2CAAH,qDAMZA,EAAQ,kBAAMK,GAAoB,IAExC,OACI,kBAAC,EAAD,CAAOP,MAAM,WAAWE,MAAOA,GAC3B,8BACI,4CACI,2BAAOtB,KAAK,OAAOoC,SAjBlB,SAAAC,GAAK,OAAIR,EAAeQ,EAAMC,OAAOC,QAiBEC,YAAY,mBACxD,0CACI,2BAAOxC,KAAK,OAAOoC,SAjBnB,SAAAC,GAAK,OAAIJ,EAAcI,EAAMC,OAAOC,QAiBGC,YAAY,YACvD,+CACI,2BAAOxC,KAAK,MAAMoC,SAlBpB,SAAAC,GAAK,OAAIF,EAAYE,EAAMC,OAAOC,QAkBGC,YAAY,gBACnD,yCACI,2BAAOxC,KAAK,MAAMoC,SAtBnB,SAAAC,GAAK,OAAIN,EAAaM,EAAMC,OAAOC,QAsBEC,YAAY,mBACpD,4BACIlE,UAAU,eACV0B,KAAK,SACLuB,QAAShC,GAHb,mBCLDkD,EA1BW,WAAO,IAAD,EACqBpC,qBAAWH,GAApDwB,EADoB,EACpBA,aAAcgB,EADM,EACNA,uBAGhBC,EAAS,uCAAG,4BAAA/D,EAAA,sEACWe,IADX,OACRC,EADQ,OAEd8B,EAAa,CAAC1B,KLVW,oBKUcJ,eACvC0B,IAHc,2CAAH,qDAMTA,EAAQ,kBAAMoB,GAAuB,IAE3C,OACI,kBAAC,EAAD,CAAOtB,MAAM,gBAAgBE,MAAOA,GAChC,8BACI,4BACIhD,UAAU,eACV0B,KAAK,SACLuB,QAASoB,GAHb,wB,cCgEDC,EA1EO,WAAO,IAAD,EACEC,qBAAWhD,EAAS,IADtB,mBACpBb,EADoB,KACd0C,EADc,OAEqBnB,oBAAS,GAF9B,mBAEpBuC,EAFoB,KAEFnB,EAFE,OAG2BpB,oBAAS,GAHpC,mBAGpBwC,EAHoB,KAGCL,EAHD,OAIOnC,mBAAS,GAJhB,mBAIpBD,EAJoB,KAIT0C,EAJS,KAMrBC,EAASC,KAAKC,KAAKnE,EAAKoE,OAAS,IAOrC,OALF1C,qBAAU,WACO/B,IACR0E,MAAK,SAAArE,GAAI,OAAI0C,EAAa,CAAE1B,KNrBd,WMqB8BhB,KAAOA,SACzD,IAGF,kBAAC,EAAqBsE,SAAtB,CAA+Bf,MAAO,CACrCvD,OACAsB,YACAoB,eACAC,sBACAe,2BAEA,yBAAKpE,UAAU,gCACd,4BACCA,UAAU,oBACV0B,KAAK,SACLuB,QAAS,kBAAMI,GAAoB,KAHpC,iBAKC,kBAAC,IAAD,CACmB4B,KAAMC,IACNzC,MAAO,CAAE0C,WAAW,UAGxC,4BACCnF,UAAU,oBACV0B,KAAK,SACLuB,QAAS,kBAAMmB,GAAuB,KAHvC,gBAKC,kBAAC,IAAD,CACmBa,KAAMC,IACNzC,MAAO,CAAE0C,WAAW,WAIzC,6BAASnF,UAAU,kBAClB,kBAAC,EAAD,OAED,6BAASA,UAAU,4BAClB,4BACCA,UAAU,iBACV0B,KAAK,SACL0D,SAAQ,UAAmB,IAAdpD,EAAkB,WAAY,IAC3CiB,QAAS,kBAAMyB,EAAa1C,EAAY,KACxC,kBAAC,IAAD,CACmBiD,KAAMI,IACN5C,MAAO,CAAE6C,YAAY,UAGzC,4BACCtF,UAAU,iBACV0B,KAAK,SACL0D,SAAQ,UAAKpD,IAAc2C,EAAS,EAAI,WAAY,IACpD1B,QAAS,kBAAMyB,EAAa1C,EAAY,KACxC,kBAAC,IAAD,CACmBiD,KAAMM,IACN9C,MAAO,CAAE0C,WAAW,WAIvCX,EAAmB,kBAAC,EAAD,MAAqB,KACxCC,EAAsB,kBAAC,EAAD,MAAwB,OCrEpCe,EARY,WACxB,OACE,6BAASxF,UAAU,uBACZ,kBAAC,EAAD,QCAGyF,EAJA,WACZ,OAAO,gFCaKC,EAVH,WACT,OACE,kBAAC,WAAD,KACF,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCiBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxB,MAAK,SAAAyB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.852fd92b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camera.919a9f74.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-button.aeec2863.svg\";","import React, { useState } from 'react';\r\nimport camera from './camera.svg';\r\n\r\nconst Header = () => {\r\n  \treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<img className=\"header-img\" src={camera} alt=\"Camera\" />\r\n\t\t\t<h1 className=\"header-title\">Photo Gallery App</h1>\r\n\t\t</header>\r\n  \t);\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://5f8fd6a1693e730016d7b7e1.mockapi.io/api/v1/images/\"\r\n\r\nexport const getData = async () => {\r\n    try {\r\n        const res = await axios.get(url);\r\n        return res.data;   \r\n    }catch(err) {\r\n        throw new Error(`Unhandled - getData: ${err}`);\r\n    }\r\n};\r\n\r\nexport const addPerson = async (newPerson, image, country, phone) => {\r\n    try {\r\n        const addNewPerson = {\r\n            fullname: newPerson,\r\n            avatar: image,\r\n            country: country,\r\n            phone: phone\r\n        };\r\n        const res = await axios.post(url, addNewPerson);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - addPerson: ${err}`);\r\n    }\r\n};\r\n\r\nexport const addRandomPerson = async () => {\r\n    try {\r\n        const addRandomP = {};\r\n        const res = await axios.post(url, addRandomP);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - addRandomPerson: ${err}`);\r\n    }\r\n}\r\n","export const GET_DATA = \"GET_DATA\";\r\nexport const PERSON_ADD = \"PERSON_ADD\";\r\nexport const RANDOM_PERSON_ADD = \"RANDOM_PERSON_ADD\";\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return action.data;\r\n        case PERSON_ADD:\r\n            return [...state, action.addP];\r\n        case RANDOM_PERSON_ADD :\r\n\t\t\treturn [...state, action.addRandomP];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst CardContainerContext = createContext(null);\r\n\r\nexport default CardContainerContext;\r\n","import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport CardContainerContext from '../../contexts/CardContainerContext';\r\n\r\nconst Card = () => {\r\n    const { data, cardIndex } = useContext(CardContainerContext);\r\n    const [pixels, setPixels] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        setPixels(-1200 * cardIndex);\r\n    }, [cardIndex]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                data.slice(0).reverse().map(person => {\r\n                    return (\r\n                        <div className=\"card-person\" style={{transform: `translateX(${pixels}px)`}}>\r\n                            <figure key={person.id}>\r\n                                <img  \r\n                                    className=\"figure-img\" \r\n                                    src={person.avatar} \r\n                                    alt={person.fullname} \r\n                                />\r\n                                <figcaption>\r\n                                    <h3 className=\"figcaption-title\">{person.fullname}</h3>\r\n                                    <p className=\"figcaption-p\"><strong>Country:</strong> {person.country}</p>\r\n                                    <p className=\"figcaption-p\"><strong>Phone:</strong> {person.phone}</p>\r\n                                </figcaption>\r\n                            </figure> \r\n                        </div>                       \r\n                    );\r\n                })\r\n            }\r\n        </Fragment>    \r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport './Modal.scss';\r\nimport closeButton from './close-button.svg';\r\n\r\nconst Modal = ({ title, children, close }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"overlay\"></div>\r\n            <section className=\"modal\">\r\n                <header>\r\n                    <h2 className=\"modal-title\">{title}</h2>\r\n                    <button \r\n                        className=\"close-button\"\r\n                        type=\"button\" \r\n                        onClick={close}>\r\n                        <img src={closeButton} alt=\"Close\" />\r\n                        </button>\r\n                </header>\r\n                <article className=\"modal-content\">\r\n                    {children}\r\n                </article>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState, useContext } from 'react';\r\nimport Modal from '../modal/Modal';\r\nimport CardContainerContext from '../../contexts/CardContainerContext';\r\nimport { PERSON_ADD } from '../../reducers/Reducer';\r\nimport { addPerson } from '../../services/Service';\r\n\r\nconst NewPersonModal = () => {\r\n    const { dataDispatch, setDisplayNewPerson } = useContext(CardContainerContext);\r\n    const [newFullname, setNewFullname] = useState('');\r\n    const [newAvatar, setNewAvatar] = useState();\r\n    const [newCountry, setNewCountry] = useState('');\r\n    const [newPhone, setNewPhone] = useState();\r\n\r\n    const fullname = event => setNewFullname(event.target.value);\r\n    const avatar = event => setNewAvatar(event.target.value);\r\n    const country = event => setNewCountry(event.target.value);\r\n    const phone = event => setNewPhone(event.target.value);\r\n\r\n    const addNewPerson = async () => {\r\n        const addP = await addPerson(newFullname, newAvatar, newCountry, newPhone);\r\n        dataDispatch({type: PERSON_ADD, addP});\r\n        close();\r\n    };\r\n\r\n    const close = () => setDisplayNewPerson(false);\r\n\r\n    return (\r\n        <Modal title=\"New User\" close={close}>\r\n            <form>\r\n                <label>Full name</label>\r\n                    <input type=\"text\" onChange={fullname}  placeholder=\"Your full name\" />\r\n                <label>Country</label>\r\n                    <input type=\"text\" onChange={country}  placeholder=\"Country\" />\r\n                <label>Phone number</label>\r\n                    <input type=\"tel\" onChange={phone} placeholder=\"57-5841 156\" />\r\n                <label>Avatar</label>\r\n                    <input type=\"url\" onChange={avatar} placeholder=\"Your url image\" />\r\n                <button \r\n                    className=\"button-modal\" \r\n                    type=\"button\" \r\n                    onClick={addNewPerson}>\r\n                    Add New User\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewPersonModal;\r\n","import React, { useState, useContext } from 'react';\r\nimport Modal from '../modal/Modal';\r\nimport CardContainerContext from '../../contexts/CardContainerContext';\r\nimport { RANDOM_PERSON_ADD } from '../../reducers/Reducer';\r\nimport { addRandomPerson} from '../../services/Service';\r\n\r\nconst RandomPersonModal = () => {\r\n    const { dataDispatch, setDisplayRandomPerson } = useContext(CardContainerContext);\r\n\r\n\r\n    const addRandom = async () => {\r\n        const addRandomP = await addRandomPerson();\r\n        dataDispatch({type: RANDOM_PERSON_ADD, addRandomP});\r\n        close();\r\n    };\r\n\r\n    const close = () => setDisplayRandomPerson(false);\r\n\r\n    return (\r\n        <Modal title=\"Random Person\" close={close}>\r\n            <form>\r\n                <button \r\n                    className=\"button-modal\" \r\n                    type=\"button\" \r\n                    onClick={addRandom}>\r\n                    Add Random Person\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default RandomPersonModal;\r\n","import React, { useReducer, useEffect, useState } from 'react';\r\nimport './CardContainer.scss';\r\nimport { getData } from '../../services/Service';\r\nimport { reducer, GET_DATA } from '../../reducers/Reducer';\r\nimport CardContainerContext from '../../contexts/CardContainerContext';\r\nimport Card from '../card/Card';\r\nimport NewPersonModal from '../addModal/NewPersonModal';\r\nimport RandomPersonModal from '../addModal/RandomPersonModal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserPlus, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CardContainer = () => {\r\n\tconst [data, dataDispatch] = useReducer(reducer, []);\r\n\tconst [displayNewPerson, setDisplayNewPerson] = useState(false);\r\n\tconst [displayRandomPerson, setDisplayRandomPerson] = useState(false);\r\n\tconst [cardIndex, setCardIndex] = useState(0);\r\n\r\n\tconst slider = Math.ceil(data.length / 10);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst promise = getData();\r\n\t\tpromise.then(data => dataDispatch({ type: GET_DATA, data : data }));\r\n\t}, []);\r\n\r\n  \treturn (\r\n\t\t<CardContainerContext.Provider value={{ \r\n\t\t\tdata, \r\n\t\t\tcardIndex,\r\n\t\t\tdataDispatch, \r\n\t\t\tsetDisplayNewPerson,\r\n\t\t\tsetDisplayRandomPerson\r\n\t\t\t}}>\r\n\t\t\t<div className=\"buttons-open-modal-container\">\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-open-modal\" \r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={() => setDisplayNewPerson(true)}>\r\n\t\t\t\t\tAdd New Person\r\n\t\t\t\t\t<FontAwesomeIcon \r\n                        icon={faUserPlus} \r\n                        style={{ marginLeft: `5px` }} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-open-modal\" \r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={() => setDisplayRandomPerson(true)}>\r\n\t\t\t\t\tRandom Person\r\n\t\t\t\t\t<FontAwesomeIcon \r\n                        icon={faUserPlus} \r\n                        style={{ marginLeft: `5px` }} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<section className=\"card-container\">\r\n\t\t\t\t<Card />\r\n\t\t\t</section>\r\n\t\t\t<section className=\"buttons-slider-container\">\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"buttons-slider\"\r\n\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\tdisabled={`${cardIndex === 0 ? 'disabled': ''}`} \r\n\t\t\t\t\tonClick={() => setCardIndex(cardIndex - 1)}>\r\n\t\t\t\t\t<FontAwesomeIcon \r\n                        icon={faChevronLeft} \r\n                        style={{ marginRight: `5px` }} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"buttons-slider\"\r\n\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\tdisabled={`${cardIndex === slider - 1 ? 'disabled': ''}`} \r\n\t\t\t\t\tonClick={() => setCardIndex(cardIndex + 1)}>\r\n\t\t\t\t\t<FontAwesomeIcon \r\n                        icon={faChevronRight} \r\n                        style={{ marginLeft: `5px` }} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t</section>\r\n\t\t\t{ displayNewPerson ? <NewPersonModal /> : null }\r\n\t\t\t{ displayRandomPerson ? <RandomPersonModal /> : null }\r\n\t\t</CardContainerContext.Provider> \r\n  \t);\r\n}\r\n\r\nexport default CardContainer;\r\n","import React from 'react';\r\nimport CardContainer from '../cardContainer/CardContainer';\r\n\r\nconst PrincipalContainer = () => {\r\n  \treturn (\r\n    \t<section className=\"principal-container\">\r\n            <CardContainer />\r\n    \t</section>\r\n  \t);\r\n}\r\n\r\nexport default PrincipalContainer;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  \treturn <footer>&copy; - Created by Maria Alarcon💖</footer>\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from 'react';\nimport './App.scss';\nimport Header from './components/header/Header';\nimport PrincipalContainer from './components/principalContainer/PrincipalContainer';\nimport Footer from './components/footer/Footer';\n\nconst App = () => {\n  \treturn (\n    \t<Fragment>\n\t\t\t<Header />\n\t\t\t<PrincipalContainer />\n\t\t\t<Footer />\n    \t</Fragment>\n  \t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}